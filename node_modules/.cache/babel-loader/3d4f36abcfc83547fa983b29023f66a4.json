{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\flashcard-app-proj\\\\src\\\\Layout\\\\Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteCard, deleteDeck, readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const [newDeck, setNewDeck] = useState(null);\n  const [newCards, setNewCards] = useState(null);\n  useEffect(() => {\n    async function loadDecks() {\n      setNewDeck([]);\n      setNewCards([]);\n\n      try {\n        const event = await readDeck(params.deckId);\n        setNewDeck(event);\n        const {\n          cards\n        } = event;\n        setNewCards(cards);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDecks();\n  }, [params]);\n\n  if (newDeck && newCards) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), \" / \", newDeck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: newDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: newDeck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${newDeck.id}/edit`);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${newDeck.id}/study`);\n          },\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            history.push(`/decks/${newDeck.id}/cards/new`);\n          },\n          children: \"Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm(\"Delete deck?\")) {\n              deleteDeck(`${newDeck.id}`);\n              history.push(\"/\");\n            }\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: newCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [card.front, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: card.back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                history.push(`/decks/${card.id}/edit`);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (window.confirm(\"Delete this card?\")) {\n                  deleteCard(`${card.id}`);\n                  history.push(`/decks/${params.deckId}`);\n                }\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please wait.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Deck, \"SMTGX4f59gz/OHZKIqBka//zSzI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/flashcard-app-proj/src/Layout/Deck.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","deleteCard","deleteDeck","readDeck","Deck","history","params","newDeck","setNewDeck","newCards","setNewCards","loadDecks","event","deckId","cards","error","console","log","name","description","push","id","window","confirm","map","card","front","back"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Link, useHistory, useParams} from \"react-router-dom\";\r\nimport {deleteCard, deleteDeck, readDeck} from \"../utils/api/index\";\r\n\r\nfunction Deck() {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const [newDeck, setNewDeck] = useState(null);\r\n    const [newCards, setNewCards] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function loadDecks() {\r\n            setNewDeck([]);\r\n            setNewCards([]);\r\n            try {\r\n                const event = await readDeck(params.deckId)\r\n                setNewDeck(event);\r\n                const {cards} = event;\r\n                setNewCards(cards);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        loadDecks();\r\n    }, [params])\r\n\r\n    if(newDeck && newCards){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Link to={\"/\"}>Home</Link> / {newDeck.name}\r\n                </div>\r\n                <div>\r\n                    <h3>{newDeck.name}</h3>\r\n                    <p>{newDeck.description}</p>\r\n                    <button onClick={() => {history.push(`/decks/${newDeck.id}/edit`)}}>Edit</button>\r\n                    <button onClick={() => {history.push(`/decks/${newDeck.id}/study`)}}>Study</button>\r\n                    <button onClick={() => {history.push(`/decks/${newDeck.id}/cards/new`)}}>Add Cards</button>\r\n                    <button onClick={() => {\r\n                        if(window.confirm(\"Delete deck?\")){\r\n                            deleteDeck(`${newDeck.id}`);\r\n                            history.push(\"/\");\r\n                        }}}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <h2>Cards</h2>\r\n                    <ul>\r\n                        {newCards.map((card) => (\r\n                            <li key={card.id}>\r\n                                {card.front}\r\n                                <div>{card.back}</div>\r\n                            <button onClick={() => {history.push(`/decks/${card.id}/edit`)}}>Edit</button>\r\n                            <button onClick={() => {\r\n                                if(window.confirm(\"Delete this card?\")){\r\n                                    deleteCard(`${card.id}`);\r\n                                    history.push(`/decks/${params.deckId}`)\r\n                                }}}>\r\n                            Delete\r\n                            </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>    \r\n            </div>\r\n        );\r\n\r\n    } else {\r\n        return <p>Please wait.....</p>\r\n    }\r\n}\r\nexport default Deck;"]},"metadata":{},"sourceType":"module"}