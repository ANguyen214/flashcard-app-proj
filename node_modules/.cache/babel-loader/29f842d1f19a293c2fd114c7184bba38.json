{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\flashcard-app-proj\\\\src\\\\Layout\\\\AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { readDeck, createCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [currDeck, setCurrDeck] = useState(null);\n  useEffect(() => {\n    async function loadCurrDeck() {\n      setCurrDeck([]);\n\n      try {\n        const event = await readDeck(params.deckId);\n        setCurrDeck(event);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadCurrDeck();\n  }, [params]);\n\n  const handleFront = event => {\n    setFront(event.target.value);\n  };\n\n  const handleBack = event => {\n    setBack(event.target.value);\n  };\n\n  const handleDone = event => {\n    event.preventDefault();\n    history.push(`/decks/${params.deckId}`);\n  };\n\n  const handleSave = () => {};\n\n  if (currDeck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${params.deckId}`,\n          children: currDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 48\n        }, this), \" / \", \"Add Card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [currDeck.name, \": Add Card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: front,\n          required: true,\n          onChange: handleFront\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: back,\n          required: true,\n          onChange: handleBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDone,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading Please Wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCard, \"kOsXMy6F2bzcSbZ3v94pxvkeDII=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/flashcard-app-proj/src/Layout/AddCard.js"],"names":["React","useState","useEffect","useHistory","useParams","Link","readDeck","createCard","AddCard","history","params","front","setFront","back","setBack","currDeck","setCurrDeck","loadCurrDeck","event","deckId","error","console","log","handleFront","target","value","handleBack","handleDone","preventDefault","push","handleSave","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { readDeck, createCard } from \"../utils/api/index\";\r\n\r\nfunction AddCard () {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [front, setFront] = useState(\"\");\r\n    const [back, setBack] = useState(\"\");\r\n    const [currDeck, setCurrDeck] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function loadCurrDeck() {\r\n            setCurrDeck([]);\r\n            try {\r\n                const event = await readDeck(params.deckId);\r\n                setCurrDeck(event);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        loadCurrDeck();\r\n    }, [params])\r\n\r\n    const handleFront = (event) => {\r\n        setFront(event.target.value);\r\n    }\r\n\r\n    const handleBack = (event) => {\r\n        setBack(event.target.value);\r\n    }\r\n\r\n    const handleDone = (event) => {\r\n        event.preventDefault();\r\n        history.push(`/decks/${params.deckId}`);\r\n    }\r\n\r\n    const handleSave = () => {\r\n\r\n    }\r\n\r\n    if(currDeck) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Link to=\"/\">Home</Link> / <Link to={`/decks/${params.deckId}`}>{currDeck.name}</Link> / {\"Add Card\"}\r\n                </div>\r\n                <h2>{currDeck.name}: Add Card</h2>\r\n                <br />\r\n                <form onSubmit={handleSave}>\r\n                    <label>Front</label>\r\n                    <br />\r\n                    <textarea\r\n                        value={front}\r\n                        required\r\n                        onChange={handleFront}\r\n                    />\r\n                    <br />\r\n                    <label>Back</label>\r\n                    <br />\r\n                    <textarea\r\n                        value={back}\r\n                        required\r\n                        onChange={handleBack}\r\n                    />\r\n                    <br />\r\n                    <button onClick={handleDone}>Done</button>\r\n                    <button type=\"submit\">Save</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <h2>Loading Please Wait...</h2>\r\n    );\r\n    \r\n}\r\nexport default AddCard;"]},"metadata":{},"sourceType":"module"}