{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\CreateDeck.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from \"react\";\n// import {Link, useHistory} from \"react-router-dom\";\n// import {createDeck} from \"../utils/api/index\";\n// function CreateDeck() {\n//     const history = useHistory();\n//     // const [name, setName] = useState(\"Deck Name\");\n//     // const [description, setDescription] = useState(\"Brief description of the deck\");\n//     const initialFormData = {\n//         name: \"\",\n//         description: \"\",\n//     };\n//     const [formData, setFormData] = useState(initialFormData);\n//     const handleFormChange = (event) => {\n//         setFormData({\n//             ...formData, \n//             [event.target.name]: event.target.value,\n//         });\n//     }\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         function Submit() {\n//             let name = [formData.name];\n//             let description = [formData.description];\n//             const createNewDeck = createDeck({name, description});\n//             return createNewDeck;\n//         }\n//         Submit();\n//         history.push(`decks/${Submit().id}`);\n//     }\n//     const handleCancel = (event) => {\n//         event.preventDefault();\n//         history.push(\"/\");\n//     }\n//     return (\n//         <div>\n//             <div>\n//                 <Link to={\"/\"}>Home</Link> / <p>Create Deck</p>\n//             </div>\n//             <h1>Create Deck</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <label>\n//                     Name\n//                     <br />\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         required\n//                         onChange={handleFormChange}\n//                         value={formData.name}\n//                         placeholder=\"Deck Name\"\n//                     />\n//                 </label>\n//                 <br />\n//                 <label>\n//                     Description\n//                     <br />\n//                     <textarea\n//                         type=\"text\"\n//                         name=\"description\"\n//                         required\n//                         onChange={handleFormChange}\n//                         value={formData.description}\n//                         placeholder=\"Brief description of the deck\"\n//                     />\n//                 </label>\n//                 <br />\n//                 <button onClick={handleCancel}>Cancel</button>\n//                 <button type=\"submit\">Submit</button>\n//             </form>\n//         </div>\n//     );\n// }\n// export default CreateDeck;\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckNew() {\n  _s();\n\n  const history = useHistory();\n  const [name, setName] = useState(\"Deck Name\");\n  const [description, setDescription] = useState(\"Brief description of the deck\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const deck = {\n      name,\n      description\n    };\n    createDeck(deck).then(response => {\n      console.log(response);\n      history.push(`/decks/${response.id}`);\n    });\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), \" / \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        onChange: e => setDescription(e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckNew, \"f+ySg6Dh4+jQfDfpFonGAMmLAv4=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckNew;\nexport default DeckNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckNew\");","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/CreateDeck.js"],"names":["React","useState","Link","useHistory","createDeck","DeckNew","history","name","setName","description","setDescription","handleSubmit","e","preventDefault","deck","then","response","console","log","push","id","handleCancel","target","value"],"mappings":"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","sourcesContent":["// import React, {useState} from \"react\";\r\n// import {Link, useHistory} from \"react-router-dom\";\r\n// import {createDeck} from \"../utils/api/index\";\r\n\r\n// function CreateDeck() {\r\n//     const history = useHistory();\r\n//     // const [name, setName] = useState(\"Deck Name\");\r\n//     // const [description, setDescription] = useState(\"Brief description of the deck\");\r\n\r\n//     const initialFormData = {\r\n//         name: \"\",\r\n//         description: \"\",\r\n//     };\r\n\r\n//     const [formData, setFormData] = useState(initialFormData);\r\n\r\n//     const handleFormChange = (event) => {\r\n//         setFormData({\r\n//             ...formData, \r\n//             [event.target.name]: event.target.value,\r\n//         });\r\n//     }\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         function Submit() {\r\n//             let name = [formData.name];\r\n//             let description = [formData.description];\r\n//             const createNewDeck = createDeck({name, description});\r\n//             return createNewDeck;\r\n//         }\r\n//         Submit();\r\n//         history.push(`decks/${Submit().id}`);\r\n//     }\r\n\r\n//     const handleCancel = (event) => {\r\n//         event.preventDefault();\r\n//         history.push(\"/\");\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <div>\r\n//                 <Link to={\"/\"}>Home</Link> / <p>Create Deck</p>\r\n//             </div>\r\n//             <h1>Create Deck</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <label>\r\n//                     Name\r\n//                     <br />\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"name\"\r\n//                         required\r\n//                         onChange={handleFormChange}\r\n//                         value={formData.name}\r\n//                         placeholder=\"Deck Name\"\r\n//                     />\r\n//                 </label>\r\n//                 <br />\r\n//                 <label>\r\n//                     Description\r\n//                     <br />\r\n//                     <textarea\r\n//                         type=\"text\"\r\n//                         name=\"description\"\r\n//                         required\r\n//                         onChange={handleFormChange}\r\n//                         value={formData.description}\r\n//                         placeholder=\"Brief description of the deck\"\r\n//                     />\r\n//                 </label>\r\n//                 <br />\r\n//                 <button onClick={handleCancel}>Cancel</button>\r\n//                 <button type=\"submit\">Submit</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateDeck;\r\n\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { createDeck } from \"../utils/api\";\r\n\r\nfunction DeckNew() {\r\n    const history = useHistory();\r\n    const [name, setName] = useState(\"Deck Name\");\r\n    const [description, setDescription] = useState(\"Brief description of the deck\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const deck = { name, description }\r\n        createDeck(deck)\r\n        .then(response => {\r\n            console.log(response)\r\n            history.push(`/decks/${response.id}`)\r\n        })\r\n    };\r\n    \r\n    const handleCancel = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/\")\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to=\"/\">Home</Link> / <div>Create Deck</div>\r\n            </div>\r\n            <form onSubmit={handleSubmit} >\r\n                <label>Name</label>\r\n                <br />\r\n                    <input \r\n                    type=\"text\" \r\n                    required\r\n                    onChange={(e) => setName(e.target.value)} \r\n                    value={name} \r\n                    />\r\n                <br />\r\n                <label>Description</label>\r\n                <br />\r\n                    <textarea\r\n                    required\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    value={description}\r\n                    />\r\n                <br />\r\n                <button type=\"submit\">Submit</button>\r\n                <button onClick={handleCancel}>Cancel</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeckNew;"]},"metadata":{},"sourceType":"module"}