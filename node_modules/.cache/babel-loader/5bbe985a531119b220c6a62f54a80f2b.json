{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\flashcard-app-proj\\\\src\\\\Layout\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { listDecks, deleteDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [deckList, setDeckList] = useState(null);\n  useEffect(() => {\n    async function loadAllDecks() {\n      setDeckList([]);\n\n      try {\n        const response = await listDecks();\n        setDeckList(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadAllDecks();\n  }, []);\n  const history = useHistory();\n\n  const handleNewDeck = () => {\n    history.push(\"/decks/new\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNewDeck,\n      children: \"+Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), deckList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: deckList.map(deck => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [deck.cards.length, \" cards\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: deck.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deck.id}`,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deck.id}/study`,\n              children: \"Study\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: event => {\n                if (window.confirm(\"Delete this deck?\")) {\n                  deleteDeck(`${deck.id}`);\n                  history.go(\"/\");\n                }\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)]\n          }, deck.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Please create a deck and enjoy!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"RLJhLcgDqg9pu30p+TWAbOG4XZA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/flashcard-app-proj/src/Layout/Home.js"],"names":["React","useEffect","useState","Link","useHistory","listDecks","deleteDeck","Home","deckList","setDeckList","loadAllDecks","response","error","console","log","history","handleNewDeck","push","map","deck","name","cards","length","description","id","event","window","confirm","go"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,oBAApC;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,IAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,YAAf,GAA8B;AAC1BD,MAAAA,WAAW,CAAC,EAAD,CAAX;;AACA,UAAI;AACA,cAAME,QAAQ,GAAG,MAAMN,SAAS,EAAhC;AACAI,QAAAA,WAAW,CAACE,QAAD,CAAX;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDF,IAAAA,YAAY;AACf,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAMK,OAAO,GAAGX,UAAU,EAA1B;;AACA,QAAMY,aAAa,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAACE,IAAR,CAAa,YAAb;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAED,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKR,QAAQ,gBACL;AAAA,6BACI;AAAA,kBACKA,QAAQ,CAACU,GAAT,CAAcC,IAAD,IAAU;AACpB;AAAA;AAAA,oCACI;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yBAAKD,IAAI,CAACE,KAAL,CAAWC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,UAASJ,IAAI,CAACK,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,UAASL,IAAI,CAACK,EAAG,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AACI,cAAA,OAAO,EAAGC,KAAD,IAAW;AAChB,oBAAGC,MAAM,CAACC,OAAP,CAAe,mBAAf,CAAH,EAAuC;AACnCrB,kBAAAA,UAAU,CAAE,GAAEa,IAAI,CAACK,EAAG,EAAZ,CAAV;AACAT,kBAAAA,OAAO,CAACa,EAAR,CAAW,GAAX;AACH;AACJ,eANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA,aAAST,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA;AAgBH,SAjBA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADK,gBAwBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAtDQjB,I;UAgBWH,U;;;KAhBXG,I;AAwDT,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {listDecks, deleteDeck} from \"../utils/api/index\";\r\n\r\n\r\nfunction Home() {\r\n    const [deckList,setDeckList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function loadAllDecks() {\r\n            setDeckList([]);\r\n            try {\r\n                const response = await listDecks();\r\n                setDeckList(response);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        loadAllDecks();\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n    const handleNewDeck = () => {\r\n        history.push(\"/decks/new\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleNewDeck}>+Create Deck</button>\r\n            {deckList ? (\r\n                <div>  \r\n                    <ul>\r\n                        {deckList.map((deck) => {\r\n                            <li key={deck.id}>\r\n                                <h2>{deck.name}</h2>\r\n                                <h5>{deck.cards.length} cards</h5>\r\n                                <p>{deck.description}</p>\r\n                                <Link to={`/decks/${deck.id}`}>View</Link>\r\n                                <Link to={`/decks/${deck.id}/study`}>Study</Link> \r\n                                <button \r\n                                    onClick={(event) => {\r\n                                        if(window.confirm(\"Delete this deck?\")){\r\n                                            deleteDeck(`${deck.id}`);\r\n                                            history.go(\"/\");\r\n                                        }\r\n                                    }}>\r\n                                Delete\r\n                                </button>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n        ) : (\r\n            <h3>Please create a deck and enjoy!</h3>\r\n        )}\r\n        </div>\r\n        \r\n    );\r\n    \r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}