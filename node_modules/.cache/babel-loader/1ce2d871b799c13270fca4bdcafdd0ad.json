{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\flashcard-app-proj\\\\src\\\\Layout\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const params = useParams();\n  const history = useHistory();\n  const [currDeck, setCurrDeck] = useState(null);\n  const [currCard, setCurrCard] = useState(null);\n  const [count, setCount] = useState(1);\n  const [side, setSide] = useState(null);\n  const [studyCount, setStudyCount] = useState(0);\n  const [studyCard, setStudyCard] = useState(null);\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrDeck([]);\n      setCurrCard([]);\n\n      try {\n        const event = await readDeck(params.deckId);\n        setCurrDeck(event);\n        const {\n          cards\n        } = event;\n        setCurrCard(event);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [params]);\n  useEffect(() => {\n    if (currCard.length > 2) {\n      setSide(true);\n    }\n\n    setStudyCard(studyCount);\n  }, [currCard]);\n\n  const handleAdd = event => {\n    event.preventDefault();\n    history.push(`/decks/${params.deckId}/cards/new`);\n  };\n\n  const handleCardFlip = event => {\n    event.preventDefault();\n    setSide(!side);\n  };\n\n  const handleNextCard = event => {\n    event.preventDefault();\n    setSide(!side);\n    setCount(currentCard => currentCard++);\n    setStudyCard(currentCard => currentCard++);\n\n    if (currCard.length <= count) {\n      if (window.confirm(\"Restart Cards?\")) {\n        setCount(1);\n        setStudyCard(0);\n        history.push(`/decks/${params.deckId}/study`);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  if (currDeck && currCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${currDeck.id}`,\n          children: currDeck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 48\n        }, this), \" / Study\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [currDeck.name, \": Study\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading Please Wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Study, \"5+sq+l8SXXN6MwZkCv1Kk8gGSjk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/flashcard-app-proj/src/Layout/Study.js"],"names":["React","useState","useEffect","useHistory","useParams","Link","readDeck","Study","params","history","currDeck","setCurrDeck","currCard","setCurrCard","count","setCount","side","setSide","studyCount","setStudyCount","studyCard","setStudyCard","loadDeck","event","deckId","cards","error","console","log","length","handleAdd","preventDefault","push","handleCardFlip","handleNextCard","currentCard","window","confirm","id","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {readDeck} from \"../utils/api/index\";\r\n\r\nfunction Study(){\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [currDeck, setCurrDeck] = useState(null);\r\n    const [currCard, setCurrCard] = useState(null);\r\n    const [count, setCount] = useState(1);\r\n    const [side, setSide] = useState(null);\r\n    const [studyCount, setStudyCount] = useState(0);\r\n    const [studyCard, setStudyCard] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function loadDeck(){\r\n            setCurrDeck([]);\r\n            setCurrCard([]);\r\n            try{\r\n                const event = await readDeck(params.deckId);\r\n                setCurrDeck(event);\r\n                const {cards} = event;\r\n                setCurrCard(event);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        loadDeck();\r\n    }, [params])\r\n\r\n    useEffect(() => {\r\n        if(currCard.length > 2){\r\n            setSide(true);\r\n        }\r\n        setStudyCard(studyCount);\r\n    },[currCard])\r\n\r\n    const handleAdd = (event) => {\r\n        event.preventDefault();\r\n        history.push(`/decks/${params.deckId}/cards/new`)\r\n    }\r\n\r\n    const handleCardFlip = (event) => {\r\n        event.preventDefault();\r\n        setSide(!side);\r\n    }\r\n\r\n    const handleNextCard = (event) => {\r\n        event.preventDefault();\r\n        setSide(!side);\r\n        setCount((currentCard) => currentCard++);\r\n        setStudyCard((currentCard) => currentCard++);\r\n        if(currCard.length <= count){\r\n            if(window.confirm(\"Restart Cards?\")){\r\n                setCount(1);\r\n                setStudyCard(0);\r\n                history.push(`/decks/${params.deckId}/study`)\r\n            } else {\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if(currDeck && currCard){\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <Link to=\"/\">Home</Link> / <Link to={`/decks/${currDeck.id}`}>{currDeck.name}</Link> / Study\r\n                </div>\r\n                <div>\r\n                    <h1>{currDeck.name}: Study</h1>\r\n                </div>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n    return<h2>Loading Please Wait...</h2>\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}