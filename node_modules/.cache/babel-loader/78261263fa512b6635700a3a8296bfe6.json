{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\flashcard-app-proj\\\\src\\\\Layout\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const [currDeck, setCurrDeck] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = \"\";\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrDeck([]);\n\n      try {\n        const event = await readDeck(params.deckId);\n        setCurrDeck(event);\n        setName(event.name);\n        setDescription(event.description);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [params]);\n\n  const handleCancel = event => {\n    event.preventDefault();\n    history.push(`/decks/${currDeck.id}`);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newDeck = {\n      name,\n      description\n    };\n    updateDeck(newDeck).then(event => {\n      setCurrentDeck(event);\n      history.push(`/decks/${currDeck.id}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), \" / \", \"insert name of deck being edited\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          required: true,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDeck, \"rjLgc+C729b6s/84nSPa5hTtyTo=\", true, function () {\n  return [useParams];\n});\n\n_c = EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/flashcard-app-proj/src/Layout/EditDeck.js"],"names":["React","useState","useEffect","Link","useParams","readDeck","updateDeck","EditDeck","history","useHistory","params","currDeck","setCurrDeck","name","setName","description","setDescription","loadDeck","event","deckId","error","console","log","handleCancel","preventDefault","push","id","handleSubmit","newDeck","then","setCurrentDeck","handleFormChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAiC,EAAvC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAee,QAAf,GAA0B;AACtBL,MAAAA,WAAW,CAAC,EAAD,CAAX;;AACA,UAAI;AACA,cAAMM,KAAK,GAAG,MAAMb,QAAQ,CAACK,MAAM,CAACS,MAAR,CAA5B;AACAP,QAAAA,WAAW,CAACM,KAAD,CAAX;AACAJ,QAAAA,OAAO,CAACI,KAAK,CAACL,IAAP,CAAP;AACAG,QAAAA,cAAc,CAACE,KAAK,CAACH,WAAP,CAAd;AACH,OALD,CAKE,OAAOK,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDH,IAAAA,QAAQ;AACX,GAbQ,EAaN,CAACP,MAAD,CAbM,CAAT;;AAeA,QAAMa,YAAY,GAAIL,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACAhB,IAAAA,OAAO,CAACiB,IAAR,CAAc,UAASd,QAAQ,CAACe,EAAG,EAAnC;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAIT,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMI,OAAO,GAAG;AACZf,MAAAA,IADY;AAEZE,MAAAA;AAFY,KAAhB;AAIAT,IAAAA,UAAU,CAACsB,OAAD,CAAV,CACKC,IADL,CACUX,KAAK,IAAI;AACXY,MAAAA,cAAc,CAACZ,KAAD,CAAd;AACAV,MAAAA,OAAO,CAACiB,IAAR,CAAc,UAASd,QAAQ,CAACe,EAAG,EAAnC;AACH,KAJL;AAKH,GAXD;;AAYA,sBACI;AAAA,4BACI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,SACkC,kCADlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACI;AAAA,wCAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,QAAQ,EAAEI;AAHd;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA,+CAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,QAAQ,EAAEA;AAHd;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAtEQxB,Q;UAEUH,S;;;KAFVG,Q","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"../utils/api/index\";\r\n\r\nfunction EditDeck() {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [currDeck, setCurrDeck] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = (\"\");\r\n\r\n    useEffect(() => {\r\n        async function loadDeck() {\r\n            setCurrDeck([]);\r\n            try {\r\n                const event = await readDeck(params.deckId);\r\n                setCurrDeck(event);\r\n                setName(event.name);\r\n                setDescription(event.description);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        loadDeck();\r\n    }, [params])\r\n\r\n    const handleCancel = (event) => {\r\n        event.preventDefault();\r\n        history.push(`/decks/${currDeck.id}`);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newDeck = {\r\n            name, \r\n            description\r\n        }\r\n        updateDeck(newDeck)\r\n            .then(event => {\r\n                setCurrentDeck(event)\r\n                history.push(`/decks/${currDeck.id}`)\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={\"/\"}>Home</Link> / {\"insert name of deck being edited\"}\r\n            </div>\r\n            <br />\r\n            <h2>Edit Deck</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Name\r\n                    <br />\r\n                    <input \r\n                        type=\"text\"\r\n                        required\r\n                        onChange={handleFormChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Description\r\n                    <br />\r\n                    <textarea \r\n                        type=\"text\"\r\n                        required\r\n                        onChange={handleFormChange}\r\n                    />\r\n                </label>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}