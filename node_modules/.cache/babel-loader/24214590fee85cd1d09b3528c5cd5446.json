{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\Thinkful\\\\qualified-challenges\\\\flashcard-app-proj\\\\src\\\\Layout\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const [currDeck, setCurrDeck] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = \"\";\n  useEffect(() => {\n    async function loadDeck() {\n      setCurrDeck([]);\n\n      try {\n        const event = await readDeck(params.deckId);\n        setCurrDeck(event);\n        setName(event.name);\n        setDescription(event.description);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    loadDeck();\n  }, [params]);\n\n  const handleCancel = event => {\n    event.preventDefault();\n    history.push(`/decks/${currDeck.id}`);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newDeck = {\n      name,\n      description\n    };\n    updateDeck(newDeck).then(event => {\n      setCurrDeck(event);\n      history.push(`/decks/${currDeck.id}`);\n    });\n  };\n\n  const handleFormChange = event => {\n    if (event.target.value === \"name\") {\n      setName(event.target.value);\n    }\n\n    if (event.target.value === \"description\") {\n      setDescription(event.target.value);\n    }\n  };\n\n  if (currDeck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), \" / \", currDeck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            value: name,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            required: true,\n            value: description,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please wait....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(EditDeck, \"rjLgc+C729b6s/84nSPa5hTtyTo=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/nguye/Documents/Thinkful/qualified-challenges/flashcard-app-proj/src/Layout/EditDeck.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","readDeck","updateDeck","EditDeck","history","params","currDeck","setCurrDeck","name","setName","description","setDescription","loadDeck","event","deckId","error","console","log","handleCancel","preventDefault","push","id","handleSubmit","newDeck","then","handleFormChange","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Link, useParams, useHistory} from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"../utils/api/index\";\r\n\r\nfunction EditDeck() {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [currDeck, setCurrDeck] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = (\"\");\r\n\r\n    useEffect(() => {\r\n        async function loadDeck() {\r\n            setCurrDeck([]);\r\n            try {\r\n                const event = await readDeck(params.deckId);\r\n                setCurrDeck(event);\r\n                setName(event.name);\r\n                setDescription(event.description);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        loadDeck();\r\n    }, [params])\r\n\r\n    const handleCancel = (event) => {\r\n        event.preventDefault();\r\n        history.push(`/decks/${currDeck.id}`);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newDeck = {\r\n            name, \r\n            description\r\n        }\r\n        updateDeck(newDeck)\r\n            .then(event => {\r\n                setCurrDeck(event)\r\n                history.push(`/decks/${currDeck.id}`)\r\n            })\r\n    }\r\n\r\n    const handleFormChange = (event) => {\r\n        if(event.target.value === \"name\"){\r\n            setName(event.target.value);\r\n        }\r\n        if(event.target.value === \"description\"){\r\n            setDescription(event.target.value);\r\n        }\r\n    }\r\n    if(currDeck){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Link to={\"/\"}>Home</Link> / {currDeck.name}\r\n                </div>\r\n                <br />\r\n                <h2>Edit Deck</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>\r\n                        Name\r\n                        <br />\r\n                        <input \r\n                            type=\"text\"\r\n                            required\r\n                            value={name}\r\n                            onChange={handleFormChange}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Description\r\n                        <br />\r\n                        <textarea \r\n                            type=\"text\"\r\n                            required\r\n                            value={description}\r\n                            onChange={handleFormChange}\r\n                        />\r\n                    </label>\r\n                    <button onClick={handleCancel}>Cancel</button>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <p>Please wait....</p>\r\n    }\r\n    \r\n}\r\n\r\nexport default EditDeck;"]},"metadata":{},"sourceType":"module"}